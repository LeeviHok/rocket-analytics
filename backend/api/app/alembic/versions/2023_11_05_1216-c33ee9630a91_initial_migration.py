"""Initial migration

Revision ID: c33ee9630a91
Revises: 
Create Date: 2023-11-05 12:16:02.321587+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c33ee9630a91'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rocket_name', sa.String(), nullable=False),
    sa.Column('flight_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('time', sa.ARRAY(sa.Numeric(precision=9, scale=5)), nullable=False),
    sa.Column('accel_axial', sa.ARRAY(sa.Numeric(precision=10, scale=7)), nullable=False),
    sa.Column('accel_lateral', sa.ARRAY(sa.Numeric(precision=10, scale=7)), nullable=False),
    sa.Column('pressure', sa.ARRAY(sa.Numeric(precision=6, scale=5)), nullable=False),
    sa.Column('current', sa.ARRAY(sa.Numeric(precision=5, scale=3)), nullable=False),
    sa.Column('temperature', sa.ARRAY(sa.Numeric(precision=5, scale=3)), nullable=False),
    sa.Column('velocity', sa.ARRAY(sa.Numeric(precision=5, scale=1)), nullable=False),
    sa.Column('voltage_battery', sa.ARRAY(sa.Numeric(precision=5, scale=3)), nullable=False),
    sa.Column('voltage_pyro_apogee', sa.ARRAY(sa.Numeric(precision=5, scale=3)), nullable=False),
    sa.Column('voltage_pyro_main', sa.ARRAY(sa.Numeric(precision=5, scale=3)), nullable=False),
    sa.Column('voltage_pyro_3', sa.ARRAY(sa.Numeric(precision=5, scale=3)), nullable=False),
    sa.Column('voltage_pyro_4', sa.ARRAY(sa.Numeric(precision=5, scale=3)), nullable=False),
    sa.Column('altitude_asl', sa.ARRAY(sa.Numeric(precision=9, scale=3)), nullable=False),
    sa.Column('altitude_agl', sa.ARRAY(sa.Numeric(precision=9, scale=3)), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flights_id'), 'flights', ['id'], unique=False)
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('permission', sa.Enum('CREATE_FLIGHTS', 'CREATE_USER', 'VIEW_PERMISSIONS', 'VIEW_ROLES', 'VIEW_SESSIONS', 'VIEW_USERS', 'DELETE_USERS', 'DELETE_SESSIONS', name='permission'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('permission')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.LargeBinary(), nullable=False),
    sa.Column('password_salt', sa.LargeBinary(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('password_hash'),
    sa.UniqueConstraint('password_salt')
    )
    op.create_table('role_to_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('user_to_role',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_to_role')
    op.drop_table('sessions')
    op.drop_table('role_to_permission')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_flights_id'), table_name='flights')
    op.drop_table('flights')
    # ### end Alembic commands ###
