Parameters:
  Region:
    Description: Select region where service will be hosted
    Type: String
    Default: eu-north-1
    AllowedValues:
      # US
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      # Asia
      - ap-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      # Canada
      - ca-central-1
      # Europe
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-north-1
      # South America
      - sa-east-1

  InstanceType:
    Description: Select server instance type (Not all types are available in all regions)
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large

  AmiId:
    Description: Enter AMI ID (Use Ubuntu Server 22.04 LTS)
    Type: String

  PostgresUsername:
    Description: Username for the PostgreSQL database
    Type: String
    Default: postgres

  PostgresPassword:
    Description: Password for the PostgreSQL user
    Type: String

  PostgresDatabase:
    Description: Name for the PostgreSQL database
    Type: String
    Default: rockets

  SshIpAddress:
    Description: Enter IPv4 address which can access server over SSH
    Type: String

Conditions:
  HasSshIpAddress: !Not [!Equals [!Ref SshIpAddress, ""]]

Resources:
  # ECR repositories
  EcrRepositoryApi:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: rocket-analytics/api

  EcrRepositoryNginx:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: rocket-analytics/nginx

  EcrRepositoryPostgres:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: rocket-analytics/postgres

  # Security group
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WebServer
      GroupDescription: HTTP and SSH traffic to the web server
      SecurityGroupIngress:
        - Description: Open HTTP to the NGINX
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

        # Create rule for SSH if IP address parameter is provided
        - !If
          - HasSshIpAddress
          - Description: Open SSH to the EC2
            IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: !Sub "${SshIpAddress}/32"
          - !Ref AWS::NoValue
